syntax = "proto3";

package omni.omni;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "omni/omni/params.proto";
import "omni/omni/balance.proto";
import "omni/omni/whitelist.proto";
import "omni/omni/observe_vote.proto";

option go_package = "omni/x/omni/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/omni/omni/params";
  
  }
  
  // Queries a list of Balance items.
  rpc BalanceAll (QueryAllBalanceRequest) returns (QueryAllBalanceResponse) {
    option (google.api.http).get = "/omni/omni/balance";
  
  }
  
  // Queries a list of Whitelist items.
  rpc Whitelist    (QueryGetWhitelistRequest) returns (QueryGetWhitelistResponse) {
    option (google.api.http).get = "/omni/omni/whitelist/{index}";
  
  }
  rpc WhitelistAll (QueryAllWhitelistRequest) returns (QueryAllWhitelistResponse) {
    option (google.api.http).get = "/omni/omni/whitelist";
  
  }
  
  // Queries a list of ObserveVote items.
  rpc ObserveVote    (QueryGetObserveVoteRequest) returns (QueryGetObserveVoteResponse) {
    option (google.api.http).get = "/omni/omni/observe_vote/{index}";
  
  }
  rpc ObserveVoteAll (QueryAllObserveVoteRequest) returns (QueryAllObserveVoteResponse) {
    option (google.api.http).get = "/omni/omni/observe_vote";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryAllBalanceRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllBalanceResponse {
  repeated Balance                                balance    = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetWhitelistRequest {
  uint64 index = 1;
}

message QueryGetWhitelistResponse {
  Whitelist whitelist = 1 [(gogoproto.nullable) = false];
}

message QueryAllWhitelistRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllWhitelistResponse {
  repeated Whitelist                              whitelist  = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

message QueryGetObserveVoteRequest {
  uint64 index = 1;
}

message QueryGetObserveVoteResponse {
  ObserveVote observeVote = 1 [(gogoproto.nullable) = false];
}

message QueryAllObserveVoteRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllObserveVoteResponse {
  repeated ObserveVote                            observeVote = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

